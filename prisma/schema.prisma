// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id                                           Int                                 @id @default(autoincrement())
  createdAt                                    DateTime                            @default(now())
  updatedAt                                    DateTime                            @updatedAt
  userId                                       String                              @unique
  rcno                                         Int
  fullName                                     String
  email                                        String
  notifications                                Notification[]
  roles                                        UserRole[]
  machineCreated                               Machine[]
  machineAssignments                           MachineAssignment[]
  machineAttachments                           MachineAttachment[]
  machineChecklistCompletions                  MachineChecklistItem[]
  machinePeriodicMaintenanceCompletions        MachinePeriodicMaintenance[]
  MachineRepairs                               MachineRepair[]
  MachineBreakdowns                            MachineBreakdown[]
  MachineSparePRs                              MachineSparePR[]
  transportationCreated                        Transportation[]
  transportationAssignments                    TransportationAssignment[]
  transportAttachments                         TransportAttachment[]
  transportationChecklistCompletions           TransportationChecklistItem[]
  transportationPeriodicMaintenanceCompletions TransportationPeriodicMaintenance[]
  TransportationRepairs                        TransportationRepair[]
  TransportationBreakdowns                     TransportationBreakdown[]
  TransportationSparePRs                       TransportationSparePR[]
}

model Notification {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  body      String?
  link      String?
  readAt    DateTime?
}

enum Permission {
  AddMachine
  EditMachine
  DeleteMachine
  AddTransportation
  EditTransportation
  DeleteTransportation
}

model Role {
  id              Int              @id @default(autoincrement())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  name            String
  userRoles       UserRole[]
  permissionRoles PermissionRole[]
}

model UserRole {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  roleId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  role      Role     @relation(fields: [roleId], references: [id])

  @@unique([userId, roleId])
}

model PermissionRole {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  roleId     Int
  permission Permission
  role       Role       @relation(fields: [roleId], references: [id])

  @@unique([roleId, permission])
}

model Machine {
  id                       Int                          @id @default(autoincrement())
  createdAt                DateTime                     @default(now())
  updatedAt                DateTime                     @updatedAt
  createdById              Int
  createdBy                User                         @relation(fields: [createdById], references: [id])
  machineNumber            String
  registeredDate           DateTime?
  model                    String
  type                     String
  zone                     String
  location                 String
  currentRunningHrs        Int?
  lastServiceHrs           Int?
  interServiceHrs          Int?
  status                   MachineStatus                @default(Working)
  statusChangedAt          DateTime?
  assignees                MachineAssignment[]
  checklistItems           MachineChecklistItem[]
  periodicMaintenancePlans MachinePeriodicMaintenance[]
  histories                MachineHistory[]
  attachments              MachineAttachment[]
  repairs                  MachineRepair[]
  breakdowns               MachineBreakdown[]
  sparePRs                 MachineSparePR[]
}

enum MachineStatus {
  Working
  Breakdown
}

enum SparePRStatus {
  Done
  Pending
}

enum RepairStatus {
  Done
  Pending
}

enum BreakdownStatus {
  Done
  Pending
}

enum PeriodicMaintenanceStatus {
  Done
  Pending
  Missed
}

model MachineAssignment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  machineId Int
  machine   Machine  @relation(fields: [machineId], references: [id])

  @@unique([userId, machineId])
}

model MachineAttachment {
  id                 Int      @id @default(autoincrement())
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  userId             Int
  user               User     @relation(fields: [userId], references: [id])
  machineId          Int
  machine            Machine  @relation(fields: [machineId], references: [id])
  description        String
  mimeType           String?
  originalName       String?
  sharepointFileName String?
}

model MachineChecklistItem {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  machineId     Int
  machine       Machine   @relation(fields: [machineId], references: [id])
  description   String
  completedById Int?
  completedBy   User?     @relation(fields: [completedById], references: [id])
  completedAt   DateTime?
  type          String    @default("Daily")
}

model MachinePeriodicMaintenance {
  id                   Int                       @id @default(autoincrement())
  createdAt            DateTime                  @default(now())
  updatedAt            DateTime                  @updatedAt
  machineId            Int
  machine              Machine                   @relation(fields: [machineId], references: [id])
  title                String
  description          String
  period               DateTime?
  notificationReminder DateTime?
  completedById        Int?
  completedBy          User?                     @relation(fields: [completedById], references: [id])
  completedAt          DateTime?
  status               PeriodicMaintenanceStatus @default(Pending)
}

model MachineHistory {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  machineId   Int
  machine     Machine  @relation(fields: [machineId], references: [id])
  type        String
  description String
}

model MachineRepair {
  id            Int          @id @default(autoincrement())
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  machineId     Int
  machine       Machine      @relation(fields: [machineId], references: [id])
  title         String
  description   String
  completedById Int?
  completedBy   User?        @relation(fields: [completedById], references: [id])
  completedAt   DateTime?
  status        RepairStatus @default(Pending)
}

model MachineBreakdown {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  machineId     Int
  machine       Machine         @relation(fields: [machineId], references: [id])
  title         String
  description   String
  completedById Int?
  completedBy   User?           @relation(fields: [completedById], references: [id])
  completedAt   DateTime?
  status        BreakdownStatus @default(Pending)
}

model MachineSparePR {
  id            Int           @id @default(autoincrement())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  machineId     Int
  machine       Machine       @relation(fields: [machineId], references: [id])
  requestedDate DateTime
  title         String
  description   String
  completedById Int?
  completedBy   User?         @relation(fields: [completedById], references: [id])
  completedAt   DateTime?
  status        SparePRStatus @default(Pending)
}

model Transportation {
  id                       Int                                 @id @default(autoincrement())
  createdAt                DateTime                            @default(now())
  updatedAt                DateTime                            @updatedAt
  createdById              Int
  createdBy                User                                @relation(fields: [createdById], references: [id])
  machineNumber            String
  registeredDate           DateTime?
  model                    String?
  type                     String?
  location                 String
  status                   TransportationStatus                @default(Working)
  statusChangedAt          DateTime?
  department               String?
  engine                   String?
  currentMileage           Int?
  lastServiceMileage       Int?
  interServiceMileage      Int?
  measurement              String?                             @default("km")
  assignees                TransportationAssignment[]
  checklistItems           TransportationChecklistItem[]
  periodicMaintenancePlans TransportationPeriodicMaintenance[]
  attachments              TransportAttachment[]
  histories                TransportationHistory[]
  repairs                  TransportationRepair[]
  breakdowns               TransportationBreakdown[]
  sparePRs                 TransportationSparePR[]
}

enum TransportationStatus {
  Working
  Breakdown
}

model TransportationAssignment {
  id               Int            @id @default(autoincrement())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  userId           Int
  user             User           @relation(fields: [userId], references: [id])
  transportationId Int
  transportation   Transportation @relation(fields: [transportationId], references: [id])

  @@unique([userId, transportationId])
}

model TransportationChecklistItem {
  id               Int            @id @default(autoincrement())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  transportationId Int
  transportation   Transportation @relation(fields: [transportationId], references: [id])
  description      String
  completedById    Int?
  completedBy      User?          @relation(fields: [completedById], references: [id])
  completedAt      DateTime?
  type             String         @default("Daily")
}

model TransportationPeriodicMaintenance {
  id                   Int                       @id @default(autoincrement())
  createdAt            DateTime                  @default(now())
  updatedAt            DateTime                  @updatedAt
  transportationId     Int
  transportation       Transportation            @relation(fields: [transportationId], references: [id])
  title                String
  description          String
  period               DateTime?
  notificationReminder DateTime?
  completedById        Int?
  completedBy          User?                     @relation(fields: [completedById], references: [id])
  completedAt          DateTime?
  status               PeriodicMaintenanceStatus @default(Pending)
}

model TransportAttachment {
  id                 Int            @id @default(autoincrement())
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  userId             Int
  user               User           @relation(fields: [userId], references: [id])
  transportationId   Int
  transportation     Transportation @relation(fields: [transportationId], references: [id])
  description        String
  mimeType           String?
  originalName       String?
  sharepointFileName String?
}

model TransportationHistory {
  id               Int            @id @default(autoincrement())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  transportationId Int
  transportation   Transportation @relation(fields: [transportationId], references: [id])
  type             String
  description      String
}

model TransportationRepair {
  id               Int            @id @default(autoincrement())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  transportationId Int
  transportation   Transportation @relation(fields: [transportationId], references: [id])
  title            String
  description      String
  completedById    Int?
  completedBy      User?          @relation(fields: [completedById], references: [id])
  completedAt      DateTime?
  status           RepairStatus   @default(Pending)
}

model TransportationBreakdown {
  id               Int             @id @default(autoincrement())
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  transportationId Int
  transportation   Transportation  @relation(fields: [transportationId], references: [id])
  title            String
  description      String
  completedById    Int?
  completedBy      User?           @relation(fields: [completedById], references: [id])
  completedAt      DateTime?
  status           BreakdownStatus @default(Pending)
}

model TransportationSparePR {
  id               Int            @id @default(autoincrement())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  transportationId Int
  transportation   Transportation @relation(fields: [transportationId], references: [id])
  requestedDate    DateTime
  title            String
  description      String
  completedById    Int?
  completedBy      User?          @relation(fields: [completedById], references: [id])
  completedAt      DateTime?
  status           SparePRStatus  @default(Pending)
}
