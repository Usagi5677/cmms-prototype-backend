# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Breakdown statuses."""
enum BreakdownStatus {
  Breakdown
  Done
  Pending
}

type ChecklistItem {
  completedAt: Date
  completedBy: User

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  id: Int!
  type: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

"""Date custom scalar type"""
scalar Date

type Machine {
  assignees: [User!]
  breakdowns: [MachineBreakdown!]
  checklistItems: [ChecklistItem!]

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  createdBy: User!
  currentRunningHrs: Int
  histories: [MachineHistory!]
  id: Int!
  interServiceHrs: Int
  lastServiceHrs: Int
  location: String!
  machineNumber: String!
  model: String!
  periodicMaintenancePlans: [MachinePeriodicMaintenance!]
  registeredDate: Date
  repairs: [MachineRepair!]
  sparePRs: [MachineSparePR!]
  status: MachineStatus
  statusChangedAt: Date
  type: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
  zone: String!
}

type MachineAttachment {
  completedBy: User

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  id: Int!
  machineId: Int!
  mimeType: String
  mode: String!
  originalName: String
  sharepointFileName: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type MachineAttachmentEdge {
  cursor: String
  node: MachineAttachment
}

type MachineAttachmentPageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type MachineBreakdown {
  completedAt: Date
  completedBy: User

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  id: Int!
  machineId: Int!
  status: BreakdownStatus!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type MachineBreakdownEdge {
  cursor: String
  node: MachineBreakdown
}

type MachineBreakdownPageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type MachineEdge {
  cursor: String
  node: Machine
}

type MachineHistory {
  completedBy: User
  completedById: Int

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  id: Int!
  machineId: Int
  type: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type MachineHistoryEdge {
  cursor: String
  node: MachineHistory
}

type MachineHistoryPageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type MachinePageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type MachinePeriodicMaintenance {
  completedAt: Date
  completedBy: User

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  id: Int!
  machineId: Int!
  notificationReminder: Int
  period: Int
  status: PeriodicMaintenanceStatus!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type MachinePeriodicMaintenanceEdge {
  cursor: String
  node: MachinePeriodicMaintenance
}

type MachinePeriodicMaintenancePageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type MachineRepair {
  completedAt: Date
  completedBy: User

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  id: Int!
  machineId: Int!
  status: RepairStatus!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type MachineRepairEdge {
  cursor: String
  node: MachineRepair
}

type MachineRepairPageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type MachineSparePR {
  completedAt: Date
  completedBy: User

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  id: Int!
  machineId: Int!
  requestedDate: Date!
  status: SparePRStatus!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type MachineSparePREdge {
  cursor: String
  node: MachineSparePR
}

type MachineSparePRPageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

"""Machine statuses."""
enum MachineStatus {
  Breakdown
  Pending
  Working
}

type Mutation {
  addMachineBreakdown(description: String!, machineId: Int!, title: String!): String!
  addMachineChecklistItem(description: String!, machineId: Int!, type: String!): String!
  addMachinePeriodicMaintenance(description: String!, machineId: Int!, notificationReminder: Int!, period: Int!, title: String!): String!
  addMachineRepair(description: String!, machineId: Int!, title: String!): String!
  addMachineSparePR(description: String!, machineId: Int!, requestedDate: Date!, title: String!): String!
  addTransportationBreakdown(description: String!, title: String!, transportationId: Int!): String!
  addTransportationChecklistItem(description: String!, transportationId: Int!, type: String!): String!
  addTransportationPeriodicMaintenance(description: String!, notificationReminder: Int!, period: Int!, title: String!, transportationId: Int!): String!
  addTransportationRepair(description: String!, title: String!, transportationId: Int!): String!
  addTransportationSparePR(description: String!, requestedDate: Date!, title: String!, transportationId: Int!): String!
  assignUsersToMachine(machineId: Int!, userIds: [Int!]!): String!
  assignUsersToTransportation(transportationId: Int!, userIds: [Int!]!): String!
  createMachine(currentRunningHrs: Int!, lastServiceHrs: Int!, location: String!, machineNumber: String!, model: String!, registeredDate: Date!, type: String!, zone: String!): String!
  createTransportation(currentMileage: Int!, department: String!, engine: String!, lastServiceMileage: Int!, location: String!, machineNumber: String!, measurement: String!, model: String!, registeredDate: Date!, transportType: String!, type: String!): String!
  deleteMachineBreakdown(id: Int!): String!
  deleteMachineChecklistItem(id: Int!): String!
  deleteMachinePeriodicMaintenance(id: Int!): String!
  deleteMachineRepair(id: Int!): String!
  deleteMachineSparePR(id: Int!): String!
  deleteTransportationBreakdown(id: Int!): String!
  deleteTransportationChecklistItem(id: Int!): String!
  deleteTransportationPeriodicMaintenance(id: Int!): String!
  deleteTransportationRepair(id: Int!): String!
  deleteTransportationSparePR(id: Int!): String!
  editMachine(currentRunningHrs: Int!, id: Int!, lastServiceHrs: Int!, location: String!, machineNumber: String!, model: String!, registeredDate: Date!, type: String!, zone: String!): String!
  editMachineAttachment(description: String!, id: Int!): String!
  editMachineBreakdown(description: String!, id: Int!, title: String!): String!
  editMachineChecklistItem(description: String!, id: Int!, type: String!): String!
  editMachinePeriodicMaintenance(description: String!, id: Int!, notificationReminder: Int!, period: Int!, title: String!): String!
  editMachineRepair(description: String!, id: Int!, title: String!): String!
  editMachineSparePR(description: String!, id: Int!, requestedDate: Date!, title: String!): String!
  editTransportation(currentMileage: Int!, department: String!, engine: String!, id: Int!, lastServiceMileage: Int!, location: String!, machineNumber: String!, measurement: String!, model: String!, registeredDate: Date!, transportType: String!, type: String!): String!
  editTransportationAttachment(description: String!, id: Int!): String!
  editTransportationBreakdown(description: String!, id: Int!, title: String!): String!
  editTransportationChecklistItem(description: String!, id: Int!, type: String!): String!
  editTransportationPeriodicMaintenance(description: String!, id: Int!, notificationReminder: Int!, period: Int!, title: String!): String!
  editTransportationRepair(description: String!, id: Int!, title: String!): String!
  editTransportationSparePR(description: String!, id: Int!, requestedDate: Date!, title: String!): String!
  flushRedis: String!
  readAllNotifications: Boolean!
  readNotification(notificationId: Int!): String!
  removeMachine(machineId: Int!): String!
  removeMachineAttachment(id: Int!): String!
  removeTransportation(transportationId: Int!): String!
  removeTransportationAttachment(id: Int!): String!
  setMachineBreakdownStatus(id: Int!, status: BreakdownStatus!): String!
  setMachinePeriodicMaintenanceStatus(id: Int!, status: PeriodicMaintenanceStatus!): String!
  setMachineRepairStatus(id: Int!, status: RepairStatus!): String!
  setMachineSparePRStatus(id: Int!, status: SparePRStatus!): String!
  setMachineStatus(machineId: Int!, status: MachineStatus!): String!
  setTransportationBreakdownStatus(id: Int!, status: BreakdownStatus!): String!
  setTransportationPeriodicMaintenanceStatus(id: Int!, status: PeriodicMaintenanceStatus!): String!
  setTransportationRepairStatus(id: Int!, status: RepairStatus!): String!
  setTransportationSparePRStatus(id: Int!, status: SparePRStatus!): String!
  setTransportationStatus(status: TransportationStatus!, transportationId: Int!): String!
  toggleMachineChecklistItem(complete: Boolean!, id: Int!): String!
  toggleTransportationChecklistItem(complete: Boolean!, id: Int!): String!
}

type Notification {
  body: String!

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  id: Int!
  link: String
  readAt: Date

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
  user: User!
  userId: Int!
}

type PaginatedMachine {
  edges: [MachineEdge!]
  pageInfo: MachinePageInfo
}

type PaginatedMachineAttachment {
  edges: [MachineAttachmentEdge!]
  pageInfo: MachineAttachmentPageInfo
}

type PaginatedMachineBreakdown {
  edges: [MachineBreakdownEdge!]
  pageInfo: MachineBreakdownPageInfo
}

type PaginatedMachineHistory {
  edges: [MachineHistoryEdge!]
  pageInfo: MachineHistoryPageInfo
}

type PaginatedMachinePeriodicMaintenance {
  edges: [MachinePeriodicMaintenanceEdge!]
  pageInfo: MachinePeriodicMaintenancePageInfo
}

type PaginatedMachineRepair {
  edges: [MachineRepairEdge!]
  pageInfo: MachineRepairPageInfo
}

type PaginatedMachineSparePR {
  edges: [MachineSparePREdge!]
  pageInfo: MachineSparePRPageInfo
}

type PaginatedTransportation {
  edges: [TransportationEdge!]
  pageInfo: TransportationPageInfo
}

type PaginatedTransportationAttachment {
  edges: [TransportationAttachmentEdge!]
  pageInfo: TransportationAttachmentPageInfo
}

type PaginatedTransportationBreakdown {
  edges: [TransportationBreakdownEdge!]
  pageInfo: TransportationBreakdownPageInfo
}

type PaginatedTransportationHistory {
  edges: [TransportationHistoryEdge!]
  pageInfo: TransportationHistoryPageInfo
}

type PaginatedTransportationPeriodicMaintenance {
  edges: [TransportationPeriodicMaintenanceEdge!]
  pageInfo: TransportationPeriodicMaintenancePageInfo
}

type PaginatedTransportationRepair {
  edges: [TransportationRepairEdge!]
  pageInfo: TransportationRepairPageInfo
}

type PaginatedTransportationSparePR {
  edges: [TransportationSparePREdge!]
  pageInfo: TransportationSparePRPageInfo
}

"""Periodic Maintenance statuses."""
enum PeriodicMaintenanceStatus {
  Done
  Missed
  Pending
}

type Profile {
  department: String!
  division: String!
  email: String
  fullName: String!
  post: String!
  rcno: Int!
  section: String
  telExtension: Int
  telMobile: Int
  telOffice: Int
  unit: String
  userId: String!
}

type Query {
  appUsers: [User!]!
  assignedMachines(
    """Paginate after opaque cursor"""
    after: String
    assignedToId: Int

    """Paginate before opaque cursor"""
    before: String
    createdById: Int
    createdByUserId: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    search: String
    self: Boolean
  ): PaginatedMachine!
  assignedTransportations(
    """Paginate after opaque cursor"""
    after: String
    assignedToId: Int

    """Paginate before opaque cursor"""
    before: String
    createdById: Int
    createdByUserId: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    search: String
    self: Boolean
    transportType: String
  ): PaginatedTransportation!
  getAllBreakdownOfMachine(
    """Paginate after opaque cursor"""
    after: String

    """Paginate before opaque cursor"""
    before: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    machineId: Int!
    search: String
  ): PaginatedMachineBreakdown!
  getAllBreakdownOfTransportation(
    """Paginate after opaque cursor"""
    after: String

    """Paginate before opaque cursor"""
    before: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    search: String
    transportationId: Int!
  ): PaginatedTransportationBreakdown!
  getAllHistoryOfMachine(
    """Paginate after opaque cursor"""
    after: String

    """Paginate before opaque cursor"""
    before: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    machineId: Int!
    search: String
  ): PaginatedMachineHistory!
  getAllHistoryOfTransportation(
    """Paginate after opaque cursor"""
    after: String

    """Paginate before opaque cursor"""
    before: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    search: String
    transportationId: Int!
  ): PaginatedTransportationHistory!
  getAllMachine(
    """Paginate after opaque cursor"""
    after: String
    assignedToId: Int

    """Paginate before opaque cursor"""
    before: String
    createdById: Int
    createdByUserId: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    search: String
    self: Boolean
  ): PaginatedMachine!
  getAllPeriodicMaintenanceOfMachine(
    """Paginate after opaque cursor"""
    after: String

    """Paginate before opaque cursor"""
    before: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    machineId: Int!
    search: String
  ): PaginatedMachinePeriodicMaintenance!
  getAllPeriodicMaintenanceOfTransportation(
    """Paginate after opaque cursor"""
    after: String

    """Paginate before opaque cursor"""
    before: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    search: String
    transportationId: Int!
  ): PaginatedTransportationPeriodicMaintenance!
  getAllRepairOfMachine(
    """Paginate after opaque cursor"""
    after: String

    """Paginate before opaque cursor"""
    before: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    machineId: Int!
    search: String
  ): PaginatedMachineRepair!
  getAllRepairOfTransportation(
    """Paginate after opaque cursor"""
    after: String

    """Paginate before opaque cursor"""
    before: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    search: String
    transportationId: Int!
  ): PaginatedTransportationRepair!
  getAllSparePROfMachine(
    """Paginate after opaque cursor"""
    after: String

    """Paginate before opaque cursor"""
    before: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    machineId: Int!
    search: String
  ): PaginatedMachineSparePR!
  getAllSparePROfTransportation(
    """Paginate after opaque cursor"""
    after: String

    """Paginate before opaque cursor"""
    before: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    search: String
    transportationId: Int!
  ): PaginatedTransportationSparePR!
  getAllTransportation(
    """Paginate after opaque cursor"""
    after: String
    assignedToId: Int

    """Paginate before opaque cursor"""
    before: String
    createdById: Int
    createdByUserId: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    search: String
    self: Boolean
    transportType: String
  ): PaginatedTransportation!
  getSingleMachine(machineId: Int!): Machine!
  getSingleTransportation(transportationId: Int!): Transportation!
  machineAttachment(id: Int!): MachineAttachment!
  machineAttachments(
    """Paginate after opaque cursor"""
    after: String

    """Paginate before opaque cursor"""
    before: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    machineId: Int!
    search: String
  ): PaginatedMachineAttachment!
  me: UserWithRoles!
  notifications: [Notification!]!
  profile: Profile!
  redisGet(key: String!): String
  redisKeys: [String!]!
  sayHello: String!
  transportationAttachment(id: Int!): TransportationAttachment!
  transportationAttachments(
    """Paginate after opaque cursor"""
    after: String

    """Paginate before opaque cursor"""
    before: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    search: String
    transportationId: Int!
  ): PaginatedTransportationAttachment!
}

"""Repair statuses."""
enum RepairStatus {
  Done
  Pending
}

"""All user roles."""
enum Role {
  Admin
  Agent
}

"""Spare pr statuses."""
enum SparePRStatus {
  Done
  Pending
}

type Subscription {
  notificationCreated: Notification!
}

type Transportation {
  assignees: [User!]
  breakdowns: [TransportationBreakdown!]
  checklistItems: [ChecklistItem!]

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  createdBy: User!
  currentMileage: Int
  department: String!
  engine: String!
  histories: [TransportationHistory!]
  id: Int!
  interServiceMileage: Int
  lastServiceMileage: Int
  location: String!
  machineNumber: String!
  measurement: String
  model: String!
  periodicMaintenancePlans: [TransportationPeriodicMaintenance!]
  registeredDate: Date
  repairs: [TransportationRepair!]
  sparePRs: [TransportationSparePR!]
  status: TransportationStatus
  statusChangedAt: Date
  transportType: String
  type: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type TransportationAttachment {
  completedBy: User

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  id: Int!
  mimeType: String
  mode: String!
  originalName: String
  sharepointFileName: String
  transportationId: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type TransportationAttachmentEdge {
  cursor: String
  node: TransportationAttachment
}

type TransportationAttachmentPageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type TransportationBreakdown {
  completedAt: Date
  completedBy: User

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  id: Int!
  status: BreakdownStatus!
  title: String!
  transportationId: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type TransportationBreakdownEdge {
  cursor: String
  node: TransportationBreakdown
}

type TransportationBreakdownPageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type TransportationEdge {
  cursor: String
  node: Transportation
}

type TransportationHistory {
  completedBy: User
  completedById: Int

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  id: Int!
  transportationId: Int
  type: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type TransportationHistoryEdge {
  cursor: String
  node: TransportationHistory
}

type TransportationHistoryPageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type TransportationPageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type TransportationPeriodicMaintenance {
  completedAt: Date
  completedBy: User

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  id: Int!
  notificationReminder: Int
  period: Int
  status: PeriodicMaintenanceStatus!
  title: String!
  transportationId: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type TransportationPeriodicMaintenanceEdge {
  cursor: String
  node: TransportationPeriodicMaintenance
}

type TransportationPeriodicMaintenancePageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type TransportationRepair {
  completedAt: Date
  completedBy: User

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  id: Int!
  status: RepairStatus!
  title: String!
  transportationId: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type TransportationRepairEdge {
  cursor: String
  node: TransportationRepair
}

type TransportationRepairPageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type TransportationSparePR {
  completedAt: Date
  completedBy: User

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  description: String!
  id: Int!
  requestedDate: Date!
  status: SparePRStatus!
  title: String!
  transportationId: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type TransportationSparePREdge {
  cursor: String
  node: TransportationSparePR
}

type TransportationSparePRPageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

"""Transportation statuses."""
enum TransportationStatus {
  Breakdown
  Pending
  Working
}

type User {
  """Identifies the date and time when the object was created."""
  createdAt: Date!
  email: String!
  fullName: String!
  id: Int!
  rcno: Int!
  roles: [Role!]

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
  userId: String!
}

type UserWithRoles {
  email: String!
  fullName: String!
  id: Int!
  rcno: Int!
  roles: [String!]!
  userId: String!
}
